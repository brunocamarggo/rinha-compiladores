package rinha.interpretador;

import com.fasterxml.jackson.databind.ObjectMapper;
import rinha.interpretador.core.ABS;
import rinha.interpretador.core.Interpreter;

public class Main {

    public static void main(String[] args)  {

        var jsonPrint = "{ \"name\": \"examples/print.rinha\", \"expression\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Str\", \"value\": \"Hello world!\", \"location\": { \"start\": 6, \"end\": 20, \"filename\": \"examples/print.rinha\" } }, \"location\": { \"start\": 0, \"end\": 21, \"filename\": \"examples/print.rinha\" } }, \"location\": { \"start\": 0, \"end\": 21, \"filename\": \"examples/print.rinha\" } }";
        var jsonAdd = "{ \"name\": \"examples/add.rinha\", \"expression\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Int\", \"value\": 1, \"location\": { \"start\": 6, \"end\": 7, \"filename\": \"examples/add.rinha\" } }, \"op\": \"Add\", \"rhs\": { \"kind\": \"Int\", \"value\": 2, \"location\": { \"start\": 10, \"end\": 11, \"filename\": \"examples/add.rinha\" } }, \"location\": { \"start\": 6, \"end\": 11, \"filename\": \"examples/add.rinha\" } }, \"location\": { \"start\": 0, \"end\": 12, \"filename\": \"examples/add.rinha\" } }, \"location\": { \"start\": 0, \"end\": 12, \"filename\": \"examples/add.rinha\" } }";
        var jsonBool = "{ \"name\": \"examples/bool.rinha\", \"expression\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Bool\", \"value\": true, \"location\": { \"start\": 6, \"end\": 10, \"filename\": \"examples/bool.rinha\" } }, \"location\": { \"start\": 0, \"end\": 11, \"filename\": \"examples/bool.rinha\" } }, \"location\": { \"start\": 0, \"end\": 11, \"filename\": \"examples/bool.rinha\" } }";
        var jsonAddComplex = "{ \"name\": \"examples/addComplex.rinha\", \"expression\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Str\", \"value\": \"1 + 2 = \", \"location\": { \"start\": 6, \"end\": 16, \"filename\": \"examples/addComplex.rinha\" } }, \"op\": \"Add\", \"rhs\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Int\", \"value\": 1, \"location\": { \"start\": 19, \"end\": 20, \"filename\": \"examples/addComplex.rinha\" } }, \"op\": \"Add\", \"rhs\": { \"kind\": \"Int\", \"value\": 2, \"location\": { \"start\": 23, \"end\": 24, \"filename\": \"examples/addComplex.rinha\" } }, \"location\": { \"start\": 19, \"end\": 24, \"filename\": \"examples/addComplex.rinha\" } }, \"location\": { \"start\": 6, \"end\": 24, \"filename\": \"examples/addComplex.rinha\" } }, \"location\": { \"start\": 0, \"end\": 25, \"filename\": \"examples/addComplex.rinha\" } }, \"location\": { \"start\": 0, \"end\": 25, \"filename\": \"examples/addComplex.rinha\" } }";
        var jsonIf = "{ \"name\": \"examples/if.rinha\", \"expression\": { \"kind\": \"If\", \"condition\": { \"kind\": \"Bool\", \"value\": true, \"location\": { \"start\": 4, \"end\": 8, \"filename\": \"examples/if.rinha\" } }, \"then\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Bool\", \"value\": true, \"location\": { \"start\": 20, \"end\": 24, \"filename\": \"examples/if.rinha\" } }, \"location\": { \"start\": 14, \"end\": 25, \"filename\": \"examples/if.rinha\" } }, \"otherwise\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Bool\", \"value\": false, \"location\": { \"start\": 43, \"end\": 48, \"filename\": \"examples/if.rinha\" } }, \"location\": { \"start\": 37, \"end\": 49, \"filename\": \"examples/if.rinha\" } }, \"location\": { \"start\": 0, \"end\": 51, \"filename\": \"examples/if.rinha\" } }, \"location\": { \"start\": 0, \"end\": 51, \"filename\": \"examples/if.rinha\" } }";
        var jsonIfFalse = "{ \"name\": \"examples/iffalse.rinha\", \"expression\": { \"kind\": \"If\", \"condition\": { \"kind\": \"Bool\", \"value\": false, \"location\": { \"start\": 4, \"end\": 9, \"filename\": \"examples/iffalse.rinha\" } }, \"then\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Str\", \"value\": \"falso\", \"location\": { \"start\": 21, \"end\": 28, \"filename\": \"examples/iffalse.rinha\" } }, \"location\": { \"start\": 15, \"end\": 29, \"filename\": \"examples/iffalse.rinha\" } }, \"otherwise\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Bool\", \"value\": false, \"location\": { \"start\": 47, \"end\": 52, \"filename\": \"examples/iffalse.rinha\" } }, \"location\": { \"start\": 41, \"end\": 53, \"filename\": \"examples/iffalse.rinha\" } }, \"location\": { \"start\": 0, \"end\": 55, \"filename\": \"examples/iffalse.rinha\" } }, \"location\": { \"start\": 0, \"end\": 55, \"filename\": \"examples/iffalse.rinha\" } }";
        var jsonLet = "{ \"name\": \"examples/let.rinha\", \"expression\": { \"kind\": \"Let\", \"name\": { \"text\": \"a\", \"location\": { \"start\": 4, \"end\": 5, \"filename\": \"examples/let.rinha\" } }, \"value\": { \"kind\": \"Int\", \"value\": 1, \"location\": { \"start\": 8, \"end\": 9, \"filename\": \"examples/let.rinha\" } }, \"next\": { \"kind\": \"Let\", \"name\": { \"text\": \"b\", \"location\": { \"start\": 15, \"end\": 16, \"filename\": \"examples/let.rinha\" } }, \"value\": { \"kind\": \"Int\", \"value\": 2, \"location\": { \"start\": 19, \"end\": 20, \"filename\": \"examples/let.rinha\" } }, \"next\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"a\", \"location\": { \"start\": 28, \"end\": 29, \"filename\": \"examples/let.rinha\" } }, \"op\": \"Add\", \"rhs\": { \"kind\": \"Var\", \"text\": \"b\", \"location\": { \"start\": 32, \"end\": 33, \"filename\": \"examples/let.rinha\" } }, \"location\": { \"start\": 28, \"end\": 33, \"filename\": \"examples/let.rinha\" } }, \"location\": { \"start\": 22, \"end\": 34, \"filename\": \"examples/let.rinha\" } }, \"location\": { \"start\": 11, \"end\": 34, \"filename\": \"examples/let.rinha\" } }, \"location\": { \"start\": 0, \"end\": 34, \"filename\": \"examples/let.rinha\" } }, \"location\": { \"start\": 0, \"end\": 34, \"filename\": \"examples/let.rinha\" } }";
        var jsonFib = "{ \"name\": \"examples/fib.rinha\", \"expression\": { \"kind\": \"Let\", \"name\": { \"text\": \"fib\", \"location\": { \"start\": 4, \"end\": 7, \"filename\": \"examples/fib.rinha\" } }, \"value\": { \"kind\": \"Function\", \"parameters\": [ { \"text\": \"n\", \"location\": { \"start\": 14, \"end\": 15, \"filename\": \"examples/fib.rinha\" } } ], \"value\": { \"kind\": \"If\", \"condition\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 28, \"end\": 29, \"filename\": \"examples/fib.rinha\" } }, \"op\": \"Lt\", \"rhs\": { \"kind\": \"Int\", \"value\": 2, \"location\": { \"start\": 32, \"end\": 33, \"filename\": \"examples/fib.rinha\" } }, \"location\": { \"start\": 28, \"end\": 33, \"filename\": \"examples/fib.rinha\" } }, \"then\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 41, \"end\": 42, \"filename\": \"examples/fib.rinha\" } }, \"otherwise\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Call\", \"callee\": { \"kind\": \"Var\", \"text\": \"fib\", \"location\": { \"start\": 58, \"end\": 61, \"filename\": \"examples/fib.rinha\" } }, \"arguments\": [ { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 62, \"end\": 63, \"filename\": \"examples/fib.rinha\" } }, \"op\": \"Sub\", \"rhs\": { \"kind\": \"Int\", \"value\": 1, \"location\": { \"start\": 66, \"end\": 67, \"filename\": \"examples/fib.rinha\" } }, \"location\": { \"start\": 62, \"end\": 67, \"filename\": \"examples/fib.rinha\" } } ], \"location\": { \"start\": 58, \"end\": 68, \"filename\": \"examples/fib.rinha\" } }, \"op\": \"Add\", \"rhs\": { \"kind\": \"Call\", \"callee\": { \"kind\": \"Var\", \"text\": \"fib\", \"location\": { \"start\": 71, \"end\": 74, \"filename\": \"examples/fib.rinha\" } }, \"arguments\": [ { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 75, \"end\": 76, \"filename\": \"examples/fib.rinha\" } }, \"op\": \"Sub\", \"rhs\": { \"kind\": \"Int\", \"value\": 2, \"location\": { \"start\": 79, \"end\": 80, \"filename\": \"examples/fib.rinha\" } }, \"location\": { \"start\": 75, \"end\": 80, \"filename\": \"examples/fib.rinha\" } } ], \"location\": { \"start\": 71, \"end\": 81, \"filename\": \"examples/fib.rinha\" } }, \"location\": { \"start\": 58, \"end\": 81, \"filename\": \"examples/fib.rinha\" } }, \"location\": { \"start\": 24, \"end\": 85, \"filename\": \"examples/fib.rinha\" } }, \"location\": { \"start\": 10, \"end\": 87, \"filename\": \"examples/fib.rinha\" } }, \"next\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Str\", \"value\": \"fib: \", \"location\": { \"start\": 96, \"end\": 103, \"filename\": \"examples/fib.rinha\" } }, \"op\": \"Add\", \"rhs\": { \"kind\": \"Call\", \"callee\": { \"kind\": \"Var\", \"text\": \"fib\", \"location\": { \"start\": 106, \"end\": 109, \"filename\": \"examples/fib.rinha\" } }, \"arguments\": [ { \"kind\": \"Int\", \"value\": 10, \"location\": { \"start\": 110, \"end\": 112, \"filename\": \"examples/fib.rinha\" } } ], \"location\": { \"start\": 106, \"end\": 113, \"filename\": \"examples/fib.rinha\" } }, \"location\": { \"start\": 96, \"end\": 113, \"filename\": \"examples/fib.rinha\" } }, \"location\": { \"start\": 90, \"end\": 114, \"filename\": \"examples/fib.rinha\" } }, \"location\": { \"start\": 0, \"end\": 114, \"filename\": \"examples/fib.rinha\" } }, \"location\": { \"start\": 0, \"end\": 114, \"filename\": \"examples/fib.rinha\" } }";
        var jsonFn = "{ \"name\": \"examples/fn.rinha\", \"expression\": { \"kind\": \"Let\", \"name\": { \"text\": \"c\", \"location\": { \"start\": 4, \"end\": 5, \"filename\": \"examples/fn.rinha\" } }, \"value\": { \"kind\": \"Int\", \"value\": 3, \"location\": { \"start\": 8, \"end\": 9, \"filename\": \"examples/fn.rinha\" } }, \"next\": { \"kind\": \"Let\", \"name\": { \"text\": \"add\", \"location\": { \"start\": 15, \"end\": 18, \"filename\": \"examples/fn.rinha\" } }, \"value\": { \"kind\": \"Function\", \"parameters\": [ { \"text\": \"a\", \"location\": { \"start\": 25, \"end\": 26, \"filename\": \"examples/fn.rinha\" } }, { \"text\": \"b\", \"location\": { \"start\": 28, \"end\": 29, \"filename\": \"examples/fn.rinha\" } } ], \"value\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"a\", \"location\": { \"start\": 40, \"end\": 41, \"filename\": \"examples/fn.rinha\" } }, \"op\": \"Add\", \"rhs\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"b\", \"location\": { \"start\": 44, \"end\": 45, \"filename\": \"examples/fn.rinha\" } }, \"op\": \"Add\", \"rhs\": { \"kind\": \"Var\", \"text\": \"c\", \"location\": { \"start\": 48, \"end\": 49, \"filename\": \"examples/fn.rinha\" } }, \"location\": { \"start\": 44, \"end\": 49, \"filename\": \"examples/fn.rinha\" } }, \"location\": { \"start\": 40, \"end\": 49, \"filename\": \"examples/fn.rinha\" } }, \"location\": { \"start\": 21, \"end\": 51, \"filename\": \"examples/fn.rinha\" } }, \"next\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Call\", \"callee\": { \"kind\": \"Var\", \"text\": \"add\", \"location\": { \"start\": 59, \"end\": 62, \"filename\": \"examples/fn.rinha\" } }, \"arguments\": [ { \"kind\": \"Int\", \"value\": 1, \"location\": { \"start\": 63, \"end\": 64, \"filename\": \"examples/fn.rinha\" } }, { \"kind\": \"Int\", \"value\": 2, \"location\": { \"start\": 66, \"end\": 67, \"filename\": \"examples/fn.rinha\" } } ], \"location\": { \"start\": 59, \"end\": 68, \"filename\": \"examples/fn.rinha\" } }, \"location\": { \"start\": 53, \"end\": 69, \"filename\": \"examples/fn.rinha\" } }, \"location\": { \"start\": 11, \"end\": 69, \"filename\": \"examples/fn.rinha\" } }, \"location\": { \"start\": 0, \"end\": 69, \"filename\": \"examples/fn.rinha\" } }, \"location\": { \"start\": 0, \"end\": 69, \"filename\": \"examples/fn.rinha\" } }";
        var jsonFib100 = "{ \"name\": \"examples/fib100.rinha\", \"expression\": { \"kind\": \"Let\", \"name\": { \"text\": \"fib\", \"location\": { \"start\": 4, \"end\": 7, \"filename\": \"examples/fib100.rinha\" } }, \"value\": { \"kind\": \"Function\", \"parameters\": [ { \"text\": \"n\", \"location\": { \"start\": 14, \"end\": 15, \"filename\": \"examples/fib100.rinha\" } } ], \"value\": { \"kind\": \"If\", \"condition\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 28, \"end\": 29, \"filename\": \"examples/fib100.rinha\" } }, \"op\": \"Lt\", \"rhs\": { \"kind\": \"Int\", \"value\": 2, \"location\": { \"start\": 32, \"end\": 33, \"filename\": \"examples/fib100.rinha\" } }, \"location\": { \"start\": 28, \"end\": 33, \"filename\": \"examples/fib100.rinha\" } }, \"then\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 41, \"end\": 42, \"filename\": \"examples/fib100.rinha\" } }, \"otherwise\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Call\", \"callee\": { \"kind\": \"Var\", \"text\": \"fib\", \"location\": { \"start\": 58, \"end\": 61, \"filename\": \"examples/fib100.rinha\" } }, \"arguments\": [ { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 62, \"end\": 63, \"filename\": \"examples/fib100.rinha\" } }, \"op\": \"Sub\", \"rhs\": { \"kind\": \"Int\", \"value\": 1, \"location\": { \"start\": 66, \"end\": 67, \"filename\": \"examples/fib100.rinha\" } }, \"location\": { \"start\": 62, \"end\": 67, \"filename\": \"examples/fib100.rinha\" } } ], \"location\": { \"start\": 58, \"end\": 68, \"filename\": \"examples/fib100.rinha\" } }, \"op\": \"Add\", \"rhs\": { \"kind\": \"Call\", \"callee\": { \"kind\": \"Var\", \"text\": \"fib\", \"location\": { \"start\": 71, \"end\": 74, \"filename\": \"examples/fib100.rinha\" } }, \"arguments\": [ { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 75, \"end\": 76, \"filename\": \"examples/fib100.rinha\" } }, \"op\": \"Sub\", \"rhs\": { \"kind\": \"Int\", \"value\": 2, \"location\": { \"start\": 79, \"end\": 80, \"filename\": \"examples/fib100.rinha\" } }, \"location\": { \"start\": 75, \"end\": 80, \"filename\": \"examples/fib100.rinha\" } } ], \"location\": { \"start\": 71, \"end\": 81, \"filename\": \"examples/fib100.rinha\" } }, \"location\": { \"start\": 58, \"end\": 81, \"filename\": \"examples/fib100.rinha\" } }, \"location\": { \"start\": 24, \"end\": 85, \"filename\": \"examples/fib100.rinha\" } }, \"location\": { \"start\": 10, \"end\": 87, \"filename\": \"examples/fib100.rinha\" } }, \"next\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Str\", \"value\": \"fib: \", \"location\": { \"start\": 96, \"end\": 103, \"filename\": \"examples/fib100.rinha\" } }, \"op\": \"Add\", \"rhs\": { \"kind\": \"Call\", \"callee\": { \"kind\": \"Var\", \"text\": \"fib\", \"location\": { \"start\": 106, \"end\": 109, \"filename\": \"examples/fib100.rinha\" } }, \"arguments\": [ { \"kind\": \"Int\", \"value\": 100, \"location\": { \"start\": 110, \"end\": 113, \"filename\": \"examples/fib100.rinha\" } } ], \"location\": { \"start\": 106, \"end\": 114, \"filename\": \"examples/fib100.rinha\" } }, \"location\": { \"start\": 96, \"end\": 114, \"filename\": \"examples/fib100.rinha\" } }, \"location\": { \"start\": 90, \"end\": 115, \"filename\": \"examples/fib100.rinha\" } }, \"location\": { \"start\": 0, \"end\": 115, \"filename\": \"examples/fib100.rinha\" } }, \"location\": { \"start\": 0, \"end\": 115, \"filename\": \"examples/fib100.rinha\" } }";
        var jsonSum = "{ \"name\": \"files/sum.rinha\", \"expression\": { \"kind\": \"Let\", \"name\": { \"text\": \"sum\", \"location\": { \"start\": 4, \"end\": 7, \"filename\": \"files/sum.rinha\" } }, \"value\": { \"kind\": \"Function\", \"parameters\": [ { \"text\": \"n\", \"location\": { \"start\": 14, \"end\": 15, \"filename\": \"files/sum.rinha\" } } ], \"value\": { \"kind\": \"If\", \"condition\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 28, \"end\": 29, \"filename\": \"files/sum.rinha\" } }, \"op\": \"Eq\", \"rhs\": { \"kind\": \"Int\", \"value\": 1, \"location\": { \"start\": 33, \"end\": 34, \"filename\": \"files/sum.rinha\" } }, \"location\": { \"start\": 28, \"end\": 34, \"filename\": \"files/sum.rinha\" } }, \"then\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 42, \"end\": 43, \"filename\": \"files/sum.rinha\" } }, \"otherwise\": { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 59, \"end\": 60, \"filename\": \"files/sum.rinha\" } }, \"op\": \"Add\", \"rhs\": { \"kind\": \"Call\", \"callee\": { \"kind\": \"Var\", \"text\": \"sum\", \"location\": { \"start\": 63, \"end\": 66, \"filename\": \"files/sum.rinha\" } }, \"arguments\": [ { \"kind\": \"Binary\", \"lhs\": { \"kind\": \"Var\", \"text\": \"n\", \"location\": { \"start\": 67, \"end\": 68, \"filename\": \"files/sum.rinha\" } }, \"op\": \"Sub\", \"rhs\": { \"kind\": \"Int\", \"value\": 1, \"location\": { \"start\": 71, \"end\": 72, \"filename\": \"files/sum.rinha\" } }, \"location\": { \"start\": 67, \"end\": 72, \"filename\": \"files/sum.rinha\" } } ], \"location\": { \"start\": 63, \"end\": 73, \"filename\": \"files/sum.rinha\" } }, \"location\": { \"start\": 59, \"end\": 73, \"filename\": \"files/sum.rinha\" } }, \"location\": { \"start\": 24, \"end\": 77, \"filename\": \"files/sum.rinha\" } }, \"location\": { \"start\": 10, \"end\": 79, \"filename\": \"files/sum.rinha\" } }, \"next\": { \"kind\": \"Print\", \"value\": { \"kind\": \"Call\", \"callee\": { \"kind\": \"Var\", \"text\": \"sum\", \"location\": { \"start\": 89, \"end\": 92, \"filename\": \"files/sum.rinha\" } }, \"arguments\": [ { \"kind\": \"Int\", \"value\": 5, \"location\": { \"start\": 93, \"end\": 94, \"filename\": \"files/sum.rinha\" } } ], \"location\": { \"start\": 89, \"end\": 95, \"filename\": \"files/sum.rinha\" } }, \"location\": { \"start\": 82, \"end\": 96, \"filename\": \"files/sum.rinha\" } }, \"location\": { \"start\": 0, \"end\": 96, \"filename\": \"files/sum.rinha\" } }, \"location\": { \"start\": 0, \"end\": 96, \"filename\": \"files/sum.rinha\" } }";


        try {
            var abs = new ObjectMapper().readValue(jsonSum, ABS.class);
            System.out.println(abs);
            Interpreter.eval(abs);
        } catch (Exception exception) {
            exception.printStackTrace();
        }

    }


}
